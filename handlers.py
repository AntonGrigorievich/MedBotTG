from aiogram.types import Message
from aiogram.dispatcher.filters import Command
from aiogram.dispatcher import FSMContext
from config import ADMIN_ID

from app import bot, dp
from states import *
from keyboards.reply import *

async def admin_startup(dp):
    await bot.send_message(chat_id=ADMIN_ID, text='–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')

@dp.message_handler(Command('start'))
async def show_menu(messge: Message):
    await messge.answer('–ö–∞–∫ –º—ã –º–æ–∂–µ–º –≤–∞–º –ø–æ–º–æ—á—å?', reply_markup=MenuKeyboard)

@dp.message_handler(text='üìç –ü–æ–º–æ—â—å')
async def bot_help(message: Message):
    await message.answer("""
    –î–∞–Ω–Ω—ã–π –æ–±–ª–∞–¥–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º:\n
    ‚Ä¢ üìã–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É - –¥–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º –∫ –≤—Ä–∞—á—É, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å (–≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –∑–∞–ø–∏—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω–∞).\n
    ‚Ä¢ ‚ù§–°–∏–º–ø—Ç–æ–º—ã - –î–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–∞–º–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É.\n
    ‚Ä¢ ‚ùî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å - –î–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–ø—Ä–æ—Å–∏—Ç—å —É –±–æ—Ç–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–π –≤–æ–ø—Ä–æ—Å (–±—ã—Å—Ç—Ä–æ –Ω–æ –Ω–µ—Ç–æ—á–Ω–æ).\n
    ‚Ä¢ i –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - –î–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–∞—Å–∞—é—â—É—é—Å—è –û—Ä—Å–∫–æ–π –±–æ–ª—å–Ω–∏—Ü—ã, –µ–µ —Ñ–∏–ª–∏–∞–ª–æ–≤ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.\n
    ‚Ä¢ ‚òé –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É - –î–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é –∫ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É (–º–µ–¥–ª–µ–Ω–Ω–æ –Ω–æ –≤–µ—Ä–Ω–æ).\n
    """)

@dp.message_handler(text='üìã –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É')
async def make_appointment(message: Message):
    await message.answer("""
    –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏—ë–º –∫ –≤—Ä–∞—á—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –ì–æ—Å—É—Å–ª—É–≥–∏, –ª–∏—á–Ω–æ –∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.\n
    –ì–æ—Å—É—Å–ª—É–≥–∏ - https://gosuslugi.ru/\n
    –¢–µ–ª–µ—Ñ–æ–Ω - 8 (495) 000-00-00\n
    """
    )

@dp.message_handler(text='‚ù§–°–∏–º–ø—Ç–æ–º—ã')
async def start_self_diagnosis(message: Message):
    await message.answer("""
    –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –º—ã –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º —á—Ç–æ —Å –≤–∞–º–∏ —Å–ª—É—á–∏–ª–æ—Å—å.\n
    1/5) –ö–∞–∫–∞—è —É –≤–∞—Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞?
    """, reply_markup=None)

    await SelfDiagnosis.first()

@dp.message_handler(state=SelfDiagnosis.nose_question)
async def diagnosis_start(message: Message, state: FSMContext):
    await state.update_data(
        temp_status = message.text
    )

    await message.answer("""
    2/5) –í–∞—Å –±–µ—Å–ø–æ–∫–æ—è—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–æ—Å–æ–º?
    """, reply_markup=None)

    await SelfDiagnosis.next()

@dp.message_handler(state=SelfDiagnosis.headache_question)
async def diagnosis_start(message: Message, state: FSMContext):
    await state.update_data(
        nose_status = message.text
    )

    await message.answer("""
    3/5) –£ –≤–∞—Å –±–æ–ª–∏—Ç –≥–æ–ª–æ–≤–∞?
    """, reply_markup=None)

    await SelfDiagnosis.next()

@dp.message_handler(state=SelfDiagnosis.cough_question)
async def diagnosis_start(message: Message, state: FSMContext):
    await state.update_data(
        headache_status = message.text
    )

    await message.answer("""
    4/5) –í–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç –∫–∞—à–µ–ª—å?
    """, reply_markup=None)

    await SelfDiagnosis.next()

@dp.message_handler(state=SelfDiagnosis.scrappiness_question)
async def diagnosis_start(message: Message, state: FSMContext):
    await state.update_data(
        cough_status = message.text
    )

    await message.answer("""
    5/5) –í—ã –æ—â—É—â–∞–µ—Ç–µ –ª–æ–º–æ—Ç—É?
    """, reply_markup=None)

    await SelfDiagnosis.next()

@dp.message_handler(state=SelfDiagnosis.final_state)
async def diagnosis_start(message: Message, state: FSMContext):
    await state.update_data(
        scrappiness_status = message.text
    )

    res = dp.storage

    await message.answer(res, reply_markup=MenuKeyboard)

    await state.reset_state()